generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      UserRole
  auth0Id   String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  shifts    Shift[]
  locationPerimetersUpdated LocationPerimeter[] @relation("UpdatedBy")
  
  @@map("users")
}

model Shift {
  id                 String      @id @default(cuid())
  userId             String
  clockInTime        DateTime // Change to non-nullable DateTime
  clockOutTime       DateTime? // Keep nullable DateTime
  clockInLatitude    Float?
  clockInLongitude   Float?
  clockOutLatitude   Float?
  clockOutLongitude  Float?
  notes              String? // Keep notes nullable
  status             ShiftStatus @default(CLOCKED_IN)
  duration           Int?        // Duration in minutes
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  
  // Relations
  user               User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("shifts")
}

model LocationPerimeter {
  id              String   @id @default(cuid())
  centerLatitude  Float
  centerLongitude Float
  radiusKm        Float // Remove default value
  address         String
  isActive        Boolean // Remove default value
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt // Change to non-nullable DateTime and keep @updatedAt
  updatedById     String // Make updatedById non-nullable
  
  // Relations
  updatedBy       User    @relation("UpdatedBy", fields: [updatedById], references: [id]) // Make relation non-nullable
  
  @@map("location_perimeters")
}

enum UserRole {
  MANAGER
  CARE_WORKER
}

enum ShiftStatus {
  CLOCKED_IN
  CLOCKED_OUT
}
